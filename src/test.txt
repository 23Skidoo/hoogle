
@package default

module Foo

type FilePath = String
type String = [Char]
id :: a -> a
unsafeCoerce :: a -> b
map :: (a -> b) -> [a] -> [b]
fmap :: Functor m => (a -> b) -> m a -> m b
unfmap :: (a -> b) -> m a -> m b
fst :: (a,b) -> a
snd :: (a,b) -> b
(==) :: Eq a => a -> a -> Bool
instance Eq Bool
instance Functor []
not :: Bool -> Bool
string :: String
chars :: [Char]


@test "id" id
@test "map" map fmap unfmap
-- for the map test, unfmap or fmap are the same level
@test "(a -> b) -> [a] -> [b]" map fmap unfmap
@test "a -> b" unsafeCoerce *
@test "(c,d) -> d" snd fst
@test "(c,d) -> c" fst snd
@test "Bool -> Bool -> Bool" == *
@test "Bool -> Bool" not * == *
@test ":: String" string chars *
@test "[Char]" chars string *
