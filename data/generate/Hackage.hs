
module Hackage where

import Util


processHackage = do
    depends "temp/hackage/hackage.tar" [] $ do
        createDirectoryIfMissing True "temp/hackage"
        system_ "wget http://hackage.haskell.org/packages/archive/00-index.tar.gz -O temp/hackage/hackage.tar.gz"
        system_ $ "gunzip --force temp/hackage/hackage.tar.gz"
        system_ $ "tar -xf temp/hackage/hackage.tar -C temp/hackage"

    xs <- mapM package =<< lsDirectories "temp/hackage"
    writeFile "temp/hackage/hoogle.txt" $ unlines $ hackagePrefix ++ concat xs
    copyFile "temp/hackage/hoogle.txt" "result/hackage.txt"


package name = do
    vers <- lsDirectories $ "temp/hackage/" ++ name
    let ver = showVersion $ maximum $ map readVersion vers
    cabal <- readCabal' $ "temp/hackage/" ++ name ++ "/" ++ ver ++ "/" ++ name ++ ".cabal"
    
    return $ [""] ++
             doc (cabalField "synopsis" cabal ++ [""] ++ cabalField "description" cabal) ++
             ["@package " ++ name, "@version " ++ ver]


doc = zipWith (++) ("-- | " : repeat "--   ")


hackagePrefix =
    ["-- Hoogle documentation, generated by Hoogle"
    ,"-- From http://hackage.haskell.org/"
    ,"-- See Hoogle, http://www.haskell.org/hoogle/"
    ]
