
module Hoogle(hoogle) where

import Util

hoogle :: String -> IO ()

hoogle name = do
    -- read the cabal info
    cabal <- readCabal $ "temp/" ++ name ++ "/" ++ name ++ ".cabal"

    -- rewrite with extra information
    src <- readTextBase $ "temp/" ++ name ++ "/hoogle.txt"

    -- '\r' because of haddock/cabal interactions going weird..
    let res = concatMap (f cabal) src
        (res1,res2) = if name == "base" then splitGHC res else (res,[])

    writeFile ("result/" ++ name ++ ".txt") $ unlines res1
    when (res2 /= []) $ writeFile "result/ghc.txt" $ unlines $ ghcPrefix ++ res2
    where
        f cabal x
            | "@package" `isPrefixOf` x =
                if name == "base" then
                    basePrefix ++ ["@depends ghc"]
                else let v = cabalVersion cabal in
                    [x, "@version " ++ v] ++ urls name v ++
                    ["@depends " ++ d | d <- cabalDepends cabal]
            | "@version" `isPrefixOf` x = []
            | otherwise = [x]

urls name version =
    ["@haddock http://hackage.haskell.org/packages/archive/" ++ name ++ "/" ++ version ++ "/doc/html/"
    ,"@hackage http://hackage.haskell.org/cgi-bin/hackage-scripts/package/" ++ name]


splitGHC :: [String] -> ([String],[String])
splitGHC = f True
    where
        f pile xs | null b = add pile xs ([], [])
                  | otherwise = add pile2 (a++[b1]) $ f pile2 bs
            where
                pile2 = if not $ "module " `isPrefixOf` b1 then pile
                        else not $ "module GHC." `isPrefixOf` b1
                b1:bs = b
                (a,b) = span isComment xs

        add left xs (a,b) = if left then (xs++a,b) else (a,xs++b)
        isComment x = x == "--" || "-- " `isPrefixOf` x


ghcPrefix :: [String]
ghcPrefix =
    ["-- Hoogle documentation, generated by Hoogle"
    ,"-- The GHC.* modules of the base library"
    ,"-- See Hoogle, http://www.haskell.org/hoogle/"
    ,""
    ,"-- | GHC modules that are part of the base library"
    ] ++ basePrefix ++ [""]

basePrefix :: [String]
basePrefix =
    ["@package base"
    ,"@version 3.0.1.0"
    ,"@haddock http://haskell.org/ghc/docs/latest/html/libraries/base/"
    ,"@hackage http://haskell.org/ghc/docs/latest/html/libraries/"
    ]
